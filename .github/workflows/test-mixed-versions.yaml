name: Test Mixed Version Clusters
on:
  push:
    branches:
      - master
      - v3.11.x
      - v3.10.x
      - v3.9.x
      - v3.8.x
      - bump-otp-*
      - bump-elixir-*
      - bump-rbe-*
      - bump-rules_erlang
    paths:
      - 'deps/**'
      - 'scripts/**'
      - Makefile
      - plugins.mk
      - rabbitmq-components.mk
      - .bazelrc
      - .bazelversion
      - BUILD.*
      - '*.bzl'
      - '*.bazel'
      - .github/workflows/test-mixed-versions.yaml
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  test-mixed-versions:
    name: Test (Mixed Version Cluster)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        erlang_major:
        - "24"
        #! - "25"
    timeout-minutes: 120
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v3
    - name: MOUNT BAZEL CACHE
      uses: actions/cache@v3.0.7
      with:
        path: "/home/runner/repo-cache/"
        key: repo-cache
    - name: CONFIGURE BAZEL
      run: |
        if [ -n "${{ secrets.BUILDBUDDY_API_KEY }}" ]; then
        cat << EOF >> user.bazelrc
          build:buildbuddy --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}
        EOF
        fi
        cat << EOF >> user.bazelrc
          build:buildbuddy --build_metadata=ROLE=CI
          build:buildbuddy --build_metadata=VISIBILITY=PUBLIC
          build:buildbuddy --repository_cache=/home/runner/repo-cache/
          build:buildbuddy --color=yes
          build:buildbuddy --disk_cache=
        EOF
    #! - name: Setup tmate session
    #!   uses: mxschmitt/action-tmate@v3
    - name: RUN TESTS
      run: |
        sudo sysctl -w net.ipv4.tcp_keepalive_time=60
        sudo ethtool -K eth0 tso off gso off gro off tx off rx off lro off
        bazelisk test //... \
          --config=rbe-${{ matrix.erlang_major }} \
          --test_tag_filters=mixed-version-cluster,-exclusive,-aws \
          --build_tests_only \
          --verbose_failures
  test-exclusive-mixed-versions:
    name: Test (Exclusive Tests with Mixed Version Cluster)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - erlang_version: "24"
          elixir_version: 1.12.3
        #! - erlang_version: "25"
        #!   elixir_version: 1.13.4
    timeout-minutes: 60
    steps:
    - name: CHECKOUT REPOSITORY
      uses: actions/checkout@v3
    - name: CONFIGURE OTP & ELIXIR
      uses: erlef/setup-beam@v1.12
      with:
        otp-version: ${{ matrix.erlang_version }}
        elixir-version: ${{ matrix.elixir_version }}
    - name: MOUNT BAZEL CACHE
      uses: actions/cache@v3.0.7
      with:
        path: "/home/runner/repo-cache/"
        key: repo-cache
    - name: CONFIGURE BAZEL
      run: |
        ERLANG_HOME="$(dirname $(dirname $(which erl)))"
        ELIXIR_HOME="$(dirname $(dirname $(which iex)))"
        if [ -n "${{ secrets.BUILDBUDDY_API_KEY }}" ]; then
        cat << EOF >> user.bazelrc
          build:buildbuddy --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}
        EOF
        fi
        cat << EOF >> user.bazelrc
          build:buildbuddy --build_metadata=ROLE=CI
          build:buildbuddy --build_metadata=VISIBILITY=PRIVATE
          build:buildbuddy --repository_cache=/home/runner/repo-cache/
          build:buildbuddy --color=yes
          build:buildbuddy --disk_cache=

          build --@rules_erlang//:erlang_version=${{ matrix.erlang_version }}
          build --@rules_erlang//:erlang_home=${ERLANG_HOME}
          build --//:elixir_home=${ELIXIR_HOME}
          build --platforms=//bazel/platforms:erlang_external_platform
          build --extra_execution_platforms=//bazel/platforms:erlang_external_platform
        EOF
    #! - name: Setup tmate session
    #!   uses: mxschmitt/action-tmate@v3
    - name: RUN EXCLUSIVE TESTS
      run: |
        MIXED_EXCLUSIVE_TESTS=$(bazel query 'attr(tags, "mixed-version-cluster", attr(tags, "exclusive", tests(//...)))')
        bazelisk test $MIXED_EXCLUSIVE_TESTS \
          --config=buildbuddy \
          --test_tag_filters=-aws \
          --build_tests_only \
          --test_env RABBITMQ_CT_HELPERS_DELETE_UNUSED_NODES=true \
          --verbose_failures
